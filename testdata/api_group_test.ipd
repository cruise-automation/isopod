# vim: set syntax=python:

# Copyright 2019 GM Cruise LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

def test_api_group_versions(t):
  kube.put_yaml(name="crd-v1", data=['{"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"name":"crd-v1"}}'])
  kube.put_yaml(name="crd-v1beta1", data=['{"apiVersion":"apiextensions.k8s.io/v1beta1","kind":"CustomResourceDefinition","metadata":{"name":"crd-v1beta1"}}'])

  # Version matches, can get
  assert(kube.exists(customresourcedefinition="crd-v1", api_group="apiextensions.k8s.io/v1", wait="0s") == True)
  assert(kube.exists(customresourcedefinition="crd-v1beta1", api_group="apiextensions.k8s.io/v1beta1", wait="0s") == True)

  # Version doesn't match, doesn't exist
  assert(kube.exists(customresourcedefinition="crd-v1beta1", api_group="apiextensions.k8s.io/v1", wait="0s") == False)
  assert(kube.exists(customresourcedefinition="crd-v1", api_group="apiextensions.k8s.io/v1beta1", wait="0s") == False)
