version: 2

golang-docker-base-image: &golang-docker-base-image
  docker:
    - image: cimg/go:1.14
      environment:
        GO111MODULE: "on"
        CGO_ENABLED: 0

linter-image: &linter-image
  docker:
    - image: golangci/golangci-lint:v1.23.8

integration-test-image: &integration-test-image
  docker:
    - image: cimg/base:2020.01

jobs:
  build:
    <<: *golang-docker-base-image
    steps:
      - checkout
      - run:
          name: "Cross Compile to Mac and Linux"
          command: |
            mkdir -p bin
            GOOS=linux go build -mod=vendor -ldflags="-X main.version=${CIRCLE_TAG}" -o bin/isopod-linux
            GOOS=darwin go build -mod=vendor -ldflags="-X main.version=${CIRCLE_TAG}" -o bin/isopod-darwin
      - persist_to_workspace:
          root: . # Could be absolute or relative to working_directory
          paths:
            - bin

  lint:
    <<: *linter-image
    steps:
      - checkout
      # Smaller $GOGC allows more frequent garbbage collection to address OOMkill in CI.
      # https://github.com/golangci/golangci-lint#memory-usage-of-golangci-lint
      - run: GOGC=50 golangci-lint --verbose run

  unittest:
    <<: *golang-docker-base-image
    steps:
      - checkout
      # CGO_ENABLED=1 for race detection.
      - run: make test-ci

  vault-integration-test:
    <<: *integration-test-image
    steps:
      - run:
          name: "Integration test for Vault plugin"
          command: |
            make kind-test-cluster
            testdata/scripts/verify_kind_cluster.sh
            testdata/scripts/install_test_vault.sh
            make test-vault

  testdata:
    <<: *golang-docker-base-image
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: VAULT_TOKEN=not-used bin/isopod-linux --deps testdata/isopod.deps test

  publish:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n ${CIRCLE_TAG} \
              -replace ${CIRCLE_TAG} \
              ./bin/

workflows:
  version: 2
  presubmit:
    jobs:
      - build
      - unittest
      - vault-integration-test
      - lint
      - testdata:
          requires:
            - build

  release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
